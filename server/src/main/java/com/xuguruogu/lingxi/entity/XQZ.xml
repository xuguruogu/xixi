<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.xuguruogu.lingxi.entity.XQZ">
	<insert id="insert" parameterType="com.xuguruogu.lingxi.entity.XQZ">
		INSERT INTO t_xqz 
		( 
			content,
			publishTime,
			publisherID 
		) VALUES 
		(
			#{content},
			#{publishTime},
			#{publisher.id}
		)
	</insert>
	
	<delete id="delete_by_id" parameterType="int">
		DELETE FROM t_xqz WHERE id=#{id}
	</delete>
	
	<update id="updateLike" parameterType="com.xuguruogu.lingxi.entity.XQZ">
		UPDATE t_xqz SET likeCount=#{likeCount},likeIds=#{likeIds} WHERE id=#{id}
	</update>
	
	<update id="updateDislike" parameterType="com.xuguruogu.lingxi.entity.XQZ">
		UPDATE t_xqz SET dislikeCount=#{dislikeCount},dislikeIds=#{dislikeIds} WHERE id=#{id}
	</update>
	
	<update id="updateRepliesCount" parameterType="com.xuguruogu.lingxi.entity.XQZ">
		UPDATE t_xqz SET repliesCount=#{repliesCount} WHERE id=#{id}
	</update>
	
	<select id="selectCount" parameterType="com.xuguruogu.lingxi.entity.Page" resultType="int">
		SELECT COUNT(*) FROM 
			t_xqz x JOIN t_customer c ON x.publisherID = c.id 
		WHERE 
			1=1 AND 
			(
				x.content LIKE '%${searchText}%' OR 
				c.nickname LIKE '%${searchText}%'
			)
			
	</select>
	
	<select id="select_by_id" parameterType="int" resultMap="xqzResult">
		SELECT 
			x.id as id,
			CAST(x.content AS CHAR CHARACTER SET utf8) AS content,
			x.publishTime as publishTime,
			x.likeCount as likeCount,
			x.dislikeCount as dislikeCount,
			x.repliesCount as repliesCount,
			x.likeIds as likeIds,
			x.dislikeIds as dislikeIds,
			c.id as pId,
			c.headPic as pHeadPic,
			c.nickname as pNickname,
			c.sex as pSex
		FROM t_xqz x JOIN t_customer c ON x.publisherID = c.id 
		WHERE x.id=#{id}
	</select>
	
	<select id="select_by_page" parameterType="com.xuguruogu.lingxi.entity.Page" resultMap="xqzResult">
		SELECT 
			x.id as id,
			CAST(x.content AS CHAR CHARACTER SET utf8) AS content,
			x.publishTime as publishTime,
			x.likeCount as likeCount,
			x.dislikeCount as dislikeCount,
			x.repliesCount as repliesCount,
			x.likeIds as likeIds,
			x.dislikeIds as dislikeIds,
			c.id as pId,
			c.headPic as pHeadPic,
			c.nickname as pNickname,
			c.sex as pSex
		FROM t_xqz x JOIN t_customer c ON x.publisherID = c.id 
		WHERE 1=1 
		<if test="customerID!=0">
			AND c.school = (SELECT school FROM t_customer WHERE id=#{customerID}) 
		</if>  AND 
			(
				x.content LIKE '%${searchText}%' OR 
				c.nickname LIKE '%${searchText}%'
			) 
		ORDER BY publishTime DESC 
		LIMIT #{startIndex},#{pageSize}
	</select>
	
	<resultMap type="com.xuguruogu.lingxi.entity.XQZ" id="xqzResult">
		<id column="id" property="id"/>
		<result column="content" property="content"/>
		<result column="publishTime" property="publishTime"/>
		<result column="likeCount" property="likeCount"/>
		<result column="dislikeCount" property="dislikeCount"/>
		<result column="repliesCount" property="repliesCount"/>
		<result column="likeIds" property="likeIds"/>
		<result column="dislikeIds" property="dislikeIds"/>
		<association property="publisher" javaType="com.xuguruogu.lingxi.entity.Customer">
			<id column="pId" property="id"/>
			<result column="pHeadPic" property="headPic"/>
			<result column="pNickname" property="nickname"/>
			<result column="pSex" property="sex"/>
		</association>
	</resultMap>
</mapper>
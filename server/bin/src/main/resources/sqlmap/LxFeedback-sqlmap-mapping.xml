<?xml version="1.0" encoding="GB2312" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="LX_FEEDBACK">
	<resultMap type="LxFeedbackDO" id="lxFeedbackResult">
		<id property="id" column="ID" javaType="java.lang.Long" jdbcType="NUMERIC" />
		<result property="gmtCreated" column="GMT_CREATED" javaType="java.util.Date" jdbcType="DATE" />
		<result property="gmtHandled" column="GMT_HANDLED" javaType="java.util.Date" jdbcType="DATE" />
		<result property="userId" column="USER_ID" javaType="java.lang.Long" jdbcType="NUMERIC" />
		<result property="title" column="TITLE" javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="content" column="CONTENT" javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="status" column="STATUS" javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="manager" column="MANAGER" javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="gmtManaged" column="GMT_MANAGED" javaType="java.util.Date" jdbcType="DATE" />
	</resultMap>

	<insert id="insert" parameterType="LxFeedbackDO">
		INSERT INTO LX_FEEDBACK (
		USER_ID,
		TITLE,
		CONTENT,
		STATUS
		)
		VALUES (
		#{userId},
		#{title},
		#{content},
		#{status})
	</insert>

	<update id="updateStatus" parameterType="LxFeedbackDO">
		UPDATE LX_FEEDBACK
		<set>
			STATUS = #{status},
			MANAGER = #{manager},
			GMT_MANAGED = CURRENT_TIMESTAMP
		</set>
		where id=#{id}
	</update>

	<select id="selectById" parameterType="long" resultMap="lxFeedbackResult">
		select * from LX_FEEDBACK WHERE id=#{id}
	</select>

	<delete id="deleteById" parameterType="long">
		delete from LX_FEEDBACK
		WHERE ID=#{id}
	</delete>

	<select id="selectCountByQueryCondition" parameterType="java.util.Map" resultType="long">
		select COUNT(*) from LX_FEEDBACK
		<include refid="QueryCondition" />
	</select>

	<select id="selectByQueryCondition" parameterType="java.util.Map" resultMap="lxFeedbackResult">
		SELECT * FROM LX_FEEDBACK
		<include refid="QueryCondition" />
		<include refid="Pagination" />
	</select>

	<!-- 查询条件 -->
	<sql id="QueryCondition">
		<trim prefix="where" prefixOverrides="and|or">

			<if test="title != null or content != null or searchText != null">
				(
				<trim prefixOverrides="and|or">
					<if test="title != null">
						TITLE LIKE #{title}
					</if>
					<if test="content != null">
						or CONTENT LIKE #{content}
					</if>
					<if test="searchText != null">
						or TITLE LIKE #{searchText} or CONTENT LIKE #{searchText}
					</if>
				</trim>
				)
			</if>
			
			<if test="userId != null">
				and USER_ID LIKE #{userId}
			</if>

			<if test="status != null">
				and STATUS LIKE #{status}
			</if>
			<if test="manager != null">
				and MANAGER LIKE #{manager}
			</if>
			<if test="gmtCreatedBegin != null ">
                <![CDATA[
				and GMT_CREATED >= #{gmtCreatedBegin}
				]]>
			</if>
			<if test="gmtCreatedEnd != null ">
                <![CDATA[
				and GMT_CREATED <= #{gmtCreatedEnd}
				]]>
			</if>
			<if test="gmtHandledBegin != null ">
                <![CDATA[
				and GMT_HANDLED >= #{gmtHandledBegin}
				]]>
			</if>
			<if test="gmtHandledEnd != null ">
                <![CDATA[
				and GMT_HANDLED <= #{gmtHandledEnd}
				]]>
			</if>
			<if test="gmtManagedBegin != null ">
                <![CDATA[
				and GMT_MANAGED >= #{gmtManagedBegin}
				]]>
			</if>
			<if test="gmtManagedEnd != null ">
                <![CDATA[
				and GMT_MANAGED <= #{gmtManagedEnd}
				]]>
			</if>
		</trim>
	</sql>
	

	<!-- 分页 -->
	<sql id="Pagination">
		<if test="startIndex != null and pageSize != null">
			LIMIT #{startIndex},#{pageSize}
		</if>
	</sql>
</mapper>

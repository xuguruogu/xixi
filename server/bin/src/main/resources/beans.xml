<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"
	default-lazy-init="true">
	<!-- 打开注解注入 -->
	<context:annotation-config />
	<context:component-scan base-package="com.xuguruogu" />
	<!-- 添加AOP annotation支持 -->
	<aop:aspectj-autoproxy />

	<!-- 将mybaties交给Spring管理其事务 -->
	<!-- 配置事务管理器 -->
	<bean id="txmanager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 事务注解驱动，标注@Transactional的类和方法将具有事务性 -->
	<tx:annotation-driven transaction-manager="txManager" />

	<!-- 集成mybatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
	</bean>

	<!-- 本地开发development环境 -->
	<beans profile="development">
		<!-- 配置log4j, development -->
		<bean id="log4jInitialization" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
			<property name="targetClass" value="org.springframework.util.Log4jConfigurer" />
			<property name="targetMethod" value="initLogging" />
			<property name="arguments">
				<list>
					<value>classpath:log4j.development.properties</value>
				</list>
			</property>
		</bean>

		<context:property-placeholder ignore-resource-not-found="true"
			location="classpath*:/application.development.properties" />

		<!-- 数据源配置, 使用Tomcat JDBC连接池 -->
		<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
			<!-- Connection Info -->
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />

			<!-- 连接的最大数量 -->
			<property name="maxActive" value="${jdbc.pool.maxActive}" />
			<!-- 空闲时，连接数降低到最小值 -->
			<property name="maxIdle" value="${jdbc.pool.maxIdle}" />
			<!-- 空闲时连接池的最小值 -->
			<property name="minIdle" value="${jdbc.pool.minIdle}" />
			<!-- 最大等待时间 -->
			<property name="maxWait" value="${jdbc.pool.maxWait}" />
		</bean>

		<!-- 初始化数据表结构 与默认数据 -->
		<jdbc:initialize-database data-source="dataSource" ignore-failures="ALL">
			<jdbc:script location="classpath:sql/schema.sql" />
			<jdbc:script location="classpath:sql/import.sql" encoding="UTF-8" />
		</jdbc:initialize-database>
	</beans>

	<!-- 生产环境production环境 -->
	<beans profile="production">
		<!-- 配置log4j, production -->
		<bean id="log4jInitialization" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
			<property name="targetClass" value="org.springframework.util.Log4jConfigurer" />
			<property name="targetMethod" value="initLogging" />
			<property name="arguments">
				<list>
					<value>classpath:log4j.production.properties</value>
				</list>
			</property>
		</bean>

		<context:property-placeholder ignore-resource-not-found="true"
			location="classpath*:/application.production.properties" />

		<!-- 数据源配置, 使用Tomcat JDBC连接池 -->
		<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
			<!-- Connection Info -->
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />

			<!-- 连接的最大数量 -->
			<property name="maxActive" value="${jdbc.pool.maxActive}" />
			<!-- 空闲时，连接数降低到最小值 -->
			<property name="maxIdle" value="${jdbc.pool.maxIdle}" />
			<!-- 空闲时连接池的最小值 -->
			<property name="minIdle" value="${jdbc.pool.minIdle}" />
			<!-- 最大等待时间 -->
			<property name="maxWait" value="${jdbc.pool.maxWait}" />
		</bean>
	</beans>

</beans>
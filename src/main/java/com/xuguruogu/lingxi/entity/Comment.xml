<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xuguruogu.lingxi.entity.Comment">
	<insert id="insert" parameterType="com.xuguruogu.lingxi.entity.Comment">
		INSERT INTO t_comment 
		(
			postID,
			floor,
			content,
			publishTime,
			commenterID
		)VALUES
		(
			#{postID},
			#{floor},
			#{content},
			#{publishTime},
			#{commenter.id}
		)
	</insert>
	
	<update id="updateCommentLike" parameterType="com.xuguruogu.lingxi.entity.Comment">
		UPDATE t_comment SET likeCount=#{likeCount},likeIds=#{likeIds} WHERE id=#{id}
	</update>
	
	<select id="select_by_id" parameterType="int" resultMap="commentResult">
		SELECT 
			c.id,
			c.postID,
			c.floor,
			c.likeCount,
			c.likeIds,
			c.publishTime,
			CAST(c.content AS CHAR CHARACTER SET utf8) AS content,
			c1.id as pId,
			c1.nickname as pNickname,
			c1.headPic as pHeadPic,
			c1.sex as pSex,
			c2.id as prParentReplierID,
			c2.nickname as prParentReplierNickname,
			pr.commentID as prCommentID,
			pr.content as prContent,
			c3.id as prReplierID,
			c3.nickname as prReplierNickname
		FROM t_comment c JOIN t_customer c1 ON c.commenterID = c1.id
		LEFT JOIN 
		(
			t_postreplies pr JOIN t_customer c2 ON pr.parentReplierID = c2.id 
			JOIN t_customer c3 ON pr.replierID = c3.id
		)
		ON pr.commentID = c.id  
		WHERE c.id=#{id}
	</select>

	<select id="select_by_page" parameterType="com.xuguruogu.lingxi.entity.Page" resultMap="commentResult">
		SELECT 
			c.id,
			c.postID,
			c.floor,
			c.likeCount,
			c.likeIds,
			c.publishTime,
			CAST(c.content AS CHAR CHARACTER SET utf8) AS content,
			c1.id as pId,
			c1.nickname as pNickname,
			c1.headPic as pHeadPic,
			c1.sex as pSex,
			c2.id as prParentReplierID,
			c2.nickname as prParentReplierNickname,
			pr.commentID as prCommentID,
			CAST(pr.content AS CHAR CHARACTER SET utf8) AS prContent,
			c3.id as prReplierID,
			c3.nickname as prReplierNickname
		FROM t_comment c JOIN t_customer c1 ON c.commenterID = c1.id
		LEFT JOIN 
		(
			t_postreplies pr JOIN t_customer c2 ON pr.parentReplierID = c2.id 
			JOIN t_customer c3 ON pr.replierID = c3.id
		)
		ON pr.commentID = c.id 
		WHERE c.id IN 
		(
			SELECT temp.id FROM 
				(SELECT * FROM t_comment WHERE postID=#{postID} ORDER BY floor ASC LIMIT #{startIndex},#{pageSize}) AS temp
		)
		ORDER BY 
			floor ASC,
			pr.id ASC  ;
	</select>
	
	<resultMap type="com.xuguruogu.lingxi.entity.Comment" id="commentResult">
		<id column="id" property="id"/>
		<result column="postID" property="postID"/>
		<result column="floor" property="floor"/>
		<result column="likeCount" property="likeCount"/>
		<result column="likeIds" property="likeIds"/>
		<result column="publishTime" property="publishTime"/>
		<result column="content" property="content"/>
		<association property="commenter" javaType="com.xuguruogu.lingxi.entity.Customer">
			<id column="pId" property="id"/>
			<result column="pNickname" property="nickname"/>
			<result column="pHeadPic" property="headPic"/>
			<result column="pSex" property="sex"/>
		</association>
		<collection property="replies" ofType="com.xuguruogu.lingxi.entity.PostReplies" column="postID">
			<id column="prId" property="id"/>
			<result column="prCommentID" property="commentID"/>
			<result column="prContent" property="content"/>
			<association property="parentReplier" javaType="com.xuguruogu.lingxi.entity.Customer">
				<id column="prParentReplierID" property="id"/>
				<result column="prParentReplierNickname" property="nickname"/>
			</association>
			<association property="replier" javaType="com.xuguruogu.lingxi.entity.Customer">
				<id column="prReplierID" property="id"/>
				<result column="prReplierNickname" property="nickname"/>
			</association>
		</collection>
	</resultMap>
</mapper>
  
  
  